// <auto-generated />
using System;
using APBDcw11.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBDcw11.Migrations
{
    [DbContext(typeof(DoctorDbContext))]
    [Migration("20210127202352_DBCreateFiller")]
    partial class DBCreateFiller
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("APBDcw11.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "r.giu@pp.pl",
                            FirstName = "Rafal",
                            LastName = "Giuseppe"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "t.pep@pp.pl",
                            FirstName = "Tadeusz",
                            LastName = "Pepperoni"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "m.mas@pp.pl",
                            FirstName = "Mariusz",
                            LastName = "Maslanka"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "l.bul@pp.pl",
                            FirstName = "Lukasz",
                            LastName = "Bulka"
                        },
                        new
                        {
                            IdDoctor = 5,
                            Email = "e.rur@pp.pl",
                            FirstName = "Edward",
                            LastName = "Rurka"
                        });
                });

            modelBuilder.Entity("APBDcw11.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Pigulka dajaca Ci +5 do zdolnosci C#",
                            Name = "Pigulka C#",
                            Type = "Na recepte"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Pigulka dajaca Ci +5 do zdolnosci SQL",
                            Name = "Pigulka SQL",
                            Type = "Bez recepty"
                        });
                });

            modelBuilder.Entity("APBDcw11.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(2011, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Radoslaw",
                            LastName = "Klemba"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(1970, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Maciej",
                            LastName = "Tomaszewski"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(1999, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Adrian",
                            LastName = "Zielantewicz"
                        },
                        new
                        {
                            IdPatient = 4,
                            Birthdate = new DateTime(2000, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pawel",
                            LastName = "Malecki"
                        },
                        new
                        {
                            IdPatient = 5,
                            Birthdate = new DateTime(2005, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Arkadiusz",
                            LastName = "Socha"
                        });
                });

            modelBuilder.Entity("APBDcw11.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2021, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 1,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2022, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 5,
                            IdPatient = 3
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 4,
                            IdPatient = 4
                        },
                        new
                        {
                            IdPrescription = 4,
                            Date = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2021, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 4,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 5,
                            Date = new DateTime(2021, 1, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            DueDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 1
                        });
                });

            modelBuilder.Entity("APBDcw11.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("IdMedicament");

                    b.HasIndex("IdPrescription");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 1,
                            Details = "3 tygodniowo",
                            Dose = 3
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 2,
                            Details = "1 dziennie",
                            Dose = 1
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 3,
                            Details = "1 dziennie",
                            Dose = 1
                        },
                        new
                        {
                            IdMedicament = 2,
                            IdPrescription = 4,
                            Details = "5 dziennie",
                            Dose = 5
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 5,
                            Details = "2 tygodniowo",
                            Dose = 2
                        });
                });

            modelBuilder.Entity("APBDcw11.Models.Prescription", b =>
                {
                    b.HasOne("APBDcw11.Models.Doctor", "Doctor")
                        .WithMany("Prescription")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDcw11.Models.Patient", "Patient")
                        .WithMany("Prescription")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("APBDcw11.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("APBDcw11.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicament")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDcw11.Models.Prescription", "Prescription")
                        .WithMany("Prescription_Medicament")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("APBDcw11.Models.Doctor", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("APBDcw11.Models.Medicament", b =>
                {
                    b.Navigation("Prescription_Medicament");
                });

            modelBuilder.Entity("APBDcw11.Models.Patient", b =>
                {
                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("APBDcw11.Models.Prescription", b =>
                {
                    b.Navigation("Prescription_Medicament");
                });
#pragma warning restore 612, 618
        }
    }
}
